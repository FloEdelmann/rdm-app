# Autogenerated bulkloader.yaml file.

# If you have module(s) with your model classes, add them here. Also
# change the kind properties to model_class.
python_preamble:
- import: base64
- import: custom_transforms
- import: re
- import: google.appengine.ext.bulkload.transform
- import: google.appengine.ext.bulkload.bulkloader_wizard
- import: google.appengine.ext.db
- import: google.appengine.api.datastore
- import: google.appengine.api.users

transformers:

- kind: Command
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: request
      external_name: request
      import_transform: db.Text

    - property: response
      external_name: response
      import_transform: db.Text

    - property: sub_device_range
      external_name: sub_device_range
      import_transform: transform.none_if_empty(int)


- kind: ControllerTagRelationship
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: controller
      external_name: controller
      import_transform: transform.create_foreign_key('Controller')
      export_transform: transform.key_id_or_name_as_string

    - property: tag
      external_name: tag
      import_transform: transform.create_foreign_key('ControllerTag')
      export_transform: transform.key_id_or_name_as_string


- kind: ControllerTag
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: exclude_from_search
      external_name: exclude_from_search
      import_transform: transform.regexp_bool('true', re.IGNORECASE)

    - property: label
      external_name: label


- kind: Controller
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: image_data
      external_name: image_data
      #If importing to a new instance uncomment this
      import_transform: "lambda x: None"
      export_transform: "lambda x: ''"

    - property: image_serving_url
      external_name: image_serving_url
      import_transform: transform.none_if_empty(db.Link)

    - property: image_url
      external_name: image_url
      import_transform: transform.none_if_empty(db.Link)

    - property: link
      external_name: link
      import_transform: transform.none_if_empty(db.Link)

    - property: manufacturer
      external_name: manufacturer
      import_transform: transform.create_foreign_key('Manufacturer')
      export_transform: transform.key_id_or_name_as_string

    - property: name
      external_name: name


- kind: LastUpdateTime
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: name
      external_name: name

    - property: update_time
      external_name: update_time
      import_transform: transform.import_date_time('%Y-%m-%dT%H:%M:%S')
      export_transform: transform.export_date_time('%Y-%m-%dT%H:%M:%S')


- kind: Manufacturer
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: esta_id
      external_name: esta_id
      import_transform: transform.none_if_empty(int)

    - property: name
      external_name: name


- kind: Pid
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: get_command
      external_name: get_command
      import_transform: transform.  none_if_empty(transform.create_foreign_key('Command'))
      export_transform: transform.key_id_or_name_as_string

    - property: link
      external_name: link
      import_transform: transform.none_if_empty(db.Link)

    - property: manufacturer
      external_name: manufacturer
      import_transform: transform.create_foreign_key('Manufacturer')
      export_transform: transform.key_id_or_name_as_string

    - property: name
      external_name: name

    - property: notes
      external_name: notes
      import_transform: db.Text

    - property: pid_id
      external_name: pid_id
      import_transform: transform.none_if_empty(int)

    - property: set_command
      external_name: set_command
      import_transform: transform.none_if_empty(transform.create_foreign_key('Command'))
      export_transform: transform.key_id_or_name_as_string

    - property: update_time
      external_name: update_time
      import_transform: transform.import_date_time('%Y-%m-%dT%H:%M:%S')
      export_transform: transform.export_date_time('%Y-%m-%dT%H:%M:%S')


- kind: ProductCategory
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: id
      external_name: id
      import_transform: transform.none_if_empty(int)

    - property: name
      external_name: name


- kind: ResponderPersonality
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: description
      external_name: description

    - property: index
      external_name: index
      import_transform: transform.none_if_empty(int)

    - property: slot_count
      external_name: slot_count
      import_transform: transform.none_if_empty(int)

    - property: sw_version
      external_name: sw_version
      import_transform: transform.create_foreign_key('SoftwareVersion')
      export_transform: transform.key_id_or_name_as_string


- kind: ResponderSensor
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: description
      external_name: description

    - property: index
      external_name: index
      import_transform: transform.none_if_empty(int)

    - property: supports_recording
      external_name: supports_recording
      import_transform: transform.regexp_bool('true', re.IGNORECASE)

    - property: sw_version
      external_name: sw_version
      import_transform: transform.create_foreign_key('SoftwareVersion')
      export_transform: transform.key_id_or_name_as_string

    - property: type
      external_name: type
      import_transform: transform.none_if_empty(int)


- kind: ResponderTagRelationship
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: responder
      external_name: responder
      import_transform: transform.create_foreign_key('Responder')
      export_transform: transform.key_id_or_name_as_string

    - property: tag
      external_name: tag
      import_transform: transform.create_foreign_key('ResponderTag')
      export_transform: transform.key_id_or_name_as_string


- kind: ResponderTag
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: exclude_from_search
      external_name: exclude_from_search
      import_transform: transform.regexp_bool('true', re.IGNORECASE)

    - property: label
      external_name: label


- kind: Responder
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: device_model_id
      external_name: device_model_id
      import_transform: transform.none_if_empty(int)

    - property: image_data
      external_name: image_data
      #If importing to a new instance uncomment this
      import_transform: "lambda x: None"
      export_transform: "lambda x: ''"

    - property: image_serving_url
      external_name: image_serving_url
      import_transform: transform.none_if_empty(db.Link)

    - property: image_url
      external_name: image_url
      import_transform: transform.none_if_empty(db.Link)

    - property: link
      external_name: link
      import_transform: transform.none_if_empty(db.Link)

    - property: manufacturer
      external_name: manufacturer
      import_transform: transform.create_foreign_key('Manufacturer')
      export_transform: transform.key_id_or_name_as_string

    - property: model_description
      external_name: model_description

    - property: product_category
      external_name: product_category
      import_transform: transform.none_if_empty(transform.create_foreign_key('ProductCategory'))
      export_transform: transform.key_id_or_name_as_string

    - property: score
      external_name: score
      import_transform: transform.none_if_empty(int)

    - property: score_penalty
      external_name: score_penalty
      import_transform: transform.none_if_empty(int)


- kind: SoftwareVersion
  connector: csv
  connector_options:
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: label
      external_name: label

    - property: responder
      external_name: responder
      import_transform: transform.create_foreign_key('Responder')
      export_transform: transform.key_id_or_name_as_string

    - property: supported_parameters
      external_name: supported_parameters
      import_transform: custom_transforms.list(int)

    - property: version_id
      external_name: version_id
      import_transform: transform.none_if_empty(int)

